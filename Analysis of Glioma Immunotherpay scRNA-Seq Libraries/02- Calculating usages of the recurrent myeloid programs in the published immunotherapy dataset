cnmf prepare --output-dir ./Calculate_Usage_Myeloid/ --name Calculate_Usage_Myeloid -c GBM_Immunotherapy_Myeloid_cNMF.txt -k 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 --n-iter 500 --total-workers 1 --seed 14 --numgenes 2225;

python;

################################## Inside Python #################################

import sklearn
import sklearn.decomposition
from sklearn.decomposition import non_negative_factorization
import numpy as np
import scanpy as sc
import csv
import scipy
import pandas as pd
 

H = pd.read_table("Myeloid_NMF_Average_Gene_Spectra.txt", sep="\t", index_col=0)

H2 = H.T

X = sc.read_h5ad('Calculate_Usage_Myeloid/Calculate_Usage_Myeloid/cnmf_tmp/Calculate_Usage_Myeloid.norm_counts.h5ad')

X2 = X.X.toarray()

X3 = pd.DataFrame(data=X2, columns = X.var_names , index = X.obs.index)

H3 = H2.filter(items = X3.columns)

H4 = H3.to_numpy()

X5 = X2.astype(np.float64)

test = sklearn.decomposition.non_negative_factorization(X5, W=None, H=H4, n_components= 14, init='random', update_H=False, solver='cd', beta_loss='frobenius', tol=0.0001, max_iter=1000, alpha=0.0, alpha_W=0.0, alpha_H='same', l1_ratio=0.0, regularization=None, random_state=None, verbose=0, shuffle=False)

test2 = list(test)

pd.DataFrame(test2[0], columns= H.columns, index=X.obs.index).to_csv(path_or_buf="./GBM_ImmunotherapyCN_Myeloid_cNMF_Usages.txt", sep="\t", quoting=csv.QUOTE_NONE)
